<%- include("../../views/partials/user/header", { user: firstName }) %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="breadcrumbs">
    <div class="container">
        <div class="row">
            <div class="col">
                <p class="bread"><span><a href="/">Home</a></span> / <span>My Wishlist</span></p>
            </div>
        </div>
    </div>
</div>

<div class="row row-pb-lg">
    <div class="col-md-12">
        <div class="product-name d-flex">
            <div class="one-forth text-left px-4">
                <span>Product Details</span>
            </div>
            <div class="one-eight text-center">
                <span>Regular Price</span>
            </div>
            <div class="one-eight text-center">
                <span>Color</span>
            </div>
            <div class="one-eight text-center">
                <span>Sale Price</span>
            </div>
            <div class="one-eight text-center px-4">
                <span>Remove</span>
            </div>
        </div>

        <% wishlist.products.forEach(product => { %>
        <div class="product-cart d-flex">
            <div class="one-forth">
                <div class="product-img">
                    
                    <% if (product.productId.productImage && product.productId.productImage.length > 0) { %>
                        <a href="/products/<%= product.productId._id %>" class="prod-img">
                        <img src="/uploads/re-image/<%= product.productId.productImage[0] %>" alt="Product Image" style="height: 100px; width: 100px;">
                    <% } else { %>
                        <img src="/path/to/default-image.jpg" alt="Default Image">
                    <% } %> 
                    </a>
                </div>
                <div class="row">
                    <div class="button-group" style="display: flex; justify-content: center; gap: 10px; margin-right: 20rem;">
                    <!-- Add to Cart Button -->
                    <a href="#" onclick="addToCart('<%= product.productId._id %>',1)" class="btn btn-primary btn-addtocart" style="    margin-left: 4rem;
    margin-top: 2rem;">
                      <i class="icon-shopping-cart"></i> Add to Cart
                    </a>
                    </div>
                </div>

                <div class="display-tc">
                    <h3><%= product.productId.productName %></h3> <!-- Correct field name -->
                </div>
            </div>
           
            <div class="one-eight text-center">
                <div class="display-tc">
                    <span class="price">₹<%= product.productId.regularPrice%></span> <!-- Adjusted for correct reference -->
                </div>
            </div>
            <div class="one-eight text-center">
                <div class="display-tc">
                    <span class="price"><%= product.productId.color%></span>
                </div>
            </div>
            <div class="one-eight text-center">
                <div class="display-tc">
                    <span class="price">₹<%= product.productId.salePrice %></span> <!-- Total price -->
                </div>
            </div>
            <div class="one-eight text-center">
                <div class="display-tc">      <!--changed from display-tc--> 
                    <button class="closed" data-id="<%= product._id %>"  onclick="removeItem(this)"  style="display: contents; cursor: pointer;"><i class="fa-solid fa-xmark"></i></button>
                </div>
            </div>
        </div>
       
       
        <% })%>
    </div>
</div>

<%- include("../../views/partials/user/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    async function removeItem(button) {
    try {
        const itemId = button.dataset.id; // Get the item ID from the button's dataset

        if (!itemId) {
            Swal.fire('Error', 'Item ID not found.', 'error');
            return;
        }

        // Ask for confirmation before removing the item
        const confirmation = await Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to remove this item from the cart?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!'
        });

        if (!confirmation.isConfirmed) {
            return; // If user canceled, do nothing
        }

        // Make DELETE request to the server
        const response = await fetch(`/wishlist/deleteItems/${itemId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        const result = await response.json();

        if (response.ok) {
           
            Swal.fire('Deleted!', result.message || 'Item removed successfully', 'success').then(() => {
       
        location.reload();
    });
            button.closest('.product-cart').remove(); 

        } else {
           
            Swal.fire('Error', result.error || 'Failed to remove item.', 'error');
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error', 'An error occurred. Please try again.', 'error');
    }
}




async function addToCart(productId, quantity) {
    try {
        // Send a POST request to the server to add the item to the cart
        const response = await fetch('/cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, quantity }),
        });

        // Check if the request was successful
        if (response.ok) {
            const result = await response.json();
            
            // SweetAlert success notification
            Swal.fire({
                title: 'Added to Cart!',
                text: result.message || 'The product was added to your cart.',
                icon: 'success',
                confirmButtonText: 'Continue Shopping',
                timer: 3000,
                timerProgressBar: true,
            });
        } else {
            // SweetAlert error notification
            Swal.fire({
                title: 'Error',
                text: 'Error adding product to cart',
                icon: 'error',
                confirmButtonText: 'Try Again'
            });
        }
    } catch (error) {
        console.error('Error adding to cart:', error);
        // SweetAlert error notification for unexpected errors
        Swal.fire({
            title: 'Error',
            text: 'An error occurred. Please try again later.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}
</script>