<%- include("../../views/partials/user/header", { user: firstName }) %>

<div class="breadcrumbs">
    <div class="container">
        <div class="row">
            <div class="col">
                <p class="bread"><span><a href="/">Home</a></span> / <span>Checkout</span></p>
            </div>
        </div>
    </div>
</div>

<div class="colorlib-product">
    <div class="container">
        <div class="row row-pb-lg">
            <div class="col-sm-10 offset-md-1">
                <div class="process-wrap">
                    <div class="process text-center active">
                        <p><span>01</span></p>
                        <h3>Shopping Cart</h3>
                    </div>
                    <div class="process text-center active">
                        <p><span>02</span></p>
                        <h3>Checkout</h3>
                    </div>
                    <div class="process text-center">
                        <p><span>03</span></p>
                        <h3>Order Complete</h3>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8"> <!-- Left Column for Addresses -->
                <h3>Select Address</h3>
                <div style="padding: 20px;">
                    <button style="background-color:#cfd6d4; border-radius: 1rem;">
                        <a href="/profile/addAddress?from=checkout"><i class="fas fa-solid fa-plus"></i> NEW ADDRESS</a>
                    </button>
                </div>
            
                <table>
                    <tbody style="color: #000000;">
                        <% if (addresses.length === 0) { %>
                            <tr>
                                <td colspan="2">No addresses found.</td>
                            </tr>
                        <% } else { %>
                            <% addresses.forEach(address => { %>
                                <tr>
                                    <td>
                                        <input type="radio" name="selectedAddress" value="<%= address._id %>" id="address-<%= address._id %>" required>
                                        
                                        <label for="address-<%= address._id %>">
                                            <%= address.name %> <br>
                                            <%= address.houseName %>, <%= address.locality %>, <%= address.city %>, <%= address.state %>, <%= address.pincode %> <br>
                                            Phone: <%= address.phone %><br>
                                            <% if (address.altPhone) { %>
                                                Alt Phone: <%= address.altPhone %><br>
                                            <% } %>
                                            <%= address.addressType %>
                                        </label>
                                    </td>
                                    <td class="actions">
                                       
                                           
                                                <button class="edit-btn" >
                                                    <a href="/profile/editAddress?id=<%= address._id %>&from=checkout&cartId=<%= cartId %>"%>" style="color: #fff;">Edit</a>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                    
                                </tr>
                            <% }); %>
                        <% } %>
                    </tbody>
                </table>
            </div>
            

            <div class="col-lg-4"> <!-- Right Column for Cart Total and Payment Method -->
                <div class="cart-detail">
                    <h2>Cart Total</h2>
                    <ul>
                        <li>
                            <span>Subtotal</span> 
                            <span>₹<%= subtotal %></span>
                            <ul>
                                <% cartData.items.forEach(item => { %>
                                    <li>
                                        
                                        <span>size:(<%= item.size %>),<%= item.quantity %> x(<%= item.productId.productName%>)</span> 
                                        
                                        <span>₹<%= item.totalPrice %></span>
                                    </li>
                                <% }) %>
                            </ul>
                        </li>
                        <li><span>Shipping</span> <span>₹0.00</span></li>
                        <li><span>Discount</span> <span>₹<%= discount%></span></li>
                        <li>
                            <span>Order Total</span> 
                            <span>₹<%= total %></span>
                        </li>
                        
                    </ul>
                </div>

                
<div class="cart-detail">
    <h2>Payment Method</h2>
    <form id="checkoutForm" action="/placeOrder" method="POST">
        <div class="form-group">
            <div class="col-md-12">
                <div class="radio">
                    <label><input type="radio" name="paymentMethod" value="Card Payment" required> Card Payment</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <% if(total<1000){%>
                <div class="radio">
                    <label><input type="radio" name="paymentMethod" value="COD" required> Cash on Delivery</label>
                </div>
                <%}%>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <button type="submit" class="btn btn-primary">Place an order</button>
            </div>
        </div>
        <input type="hidden" name="addressId" id="addressId" value="">
    </form>
    
</div>
</div>


<%- include("../../views/partials/user/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Include Razorpay's Checkout script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.querySelector('#checkoutForm').addEventListener('submit', async function(event) {
    event.preventDefault(); // Prevent default form submission

    const selectedAddressId = document.querySelector('input[name="selectedAddress"]:checked');
    const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

    // Check if an address is selected
    if (!selectedAddressId) {
        alert('Please select an address for delivery.');
        return; // Stop execution if no address is selected
    }

    // Set the selected address ID in the hidden input
    document.getElementById('addressId').value = selectedAddressId.value;

    const addressId = selectedAddressId.value;
    const paymentMethod = selectedPaymentMethod.value; // Get the value of the selected payment option

    const orderDetails = { addressId, paymentMethod }; // Prepare order details

    try {
        const response = await fetch('/placeOrder', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(orderDetails),
        });

        const result = await response.json();
        console.log(result)
        if (response.ok && paymentMethod === 'Card Payment') {
            // Initiate Razorpay payment if the payment method is 'Card Payment'
            initiateRazorpayPayment(result); // Pass the Razorpay order details to the payment function
        } else if (response.ok && paymentMethod === 'COD') {
            // For COD, redirect to the order-complete page
            window.location.href =  result.redirectUrl;
        } else {
            // // Handle any errors from the server
            // alert(result.message || 'Error placing order');

            // Handle any errors from the server
           Swal.fire({
           icon: 'error',
           title: 'Error',
           text: result.message || 'Error placing order',
           confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        // console.error('Error submitting order:', error);
        // alert('Error submitting order.');

        console.error('Error submitting order:', error);
Swal.fire({
    icon: 'error',
    title: 'Submission Error',
    text: 'There was an error submitting your order. Please try again.',
    confirmButtonText: 'OK'
});
    }
});

// Function to initiate Razorpay payment
function initiateRazorpayPayment(orderDetails) {
    const options = {
        key: orderDetails.key, // Razorpay API Key
        amount: orderDetails.amount, // Amount in paise
        currency: orderDetails.currency,
        name: orderDetails.name, // Your store name
        description: orderDetails.description, // Payment description
        order_id: orderDetails.orderId, // The Razorpay order_id
        handler: function (response) {
            // Handle payment success - send payment details to the backend for verification
            verifyPayment(response);
        },
        prefill: {
            name: orderDetails.prefill.name,
            email: orderDetails.prefill.email,
            contact: orderDetails.prefill.contact
        },
        theme: {
            color: "#3399cc" // Customize the checkout modal's color
        }
    };

    const rzp = new Razorpay(options);
    rzp.open(); // Opens Razorpay Checkout modal
}

// Function to verify the payment on the backend
function verifyPayment(paymentResponse) {
    fetch('/verify-payment', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            razorpay_order_id: paymentResponse.razorpay_order_id,
            razorpay_payment_id: paymentResponse.razorpay_payment_id,
            razorpay_signature: paymentResponse.razorpay_signature
        })
    })
    .then(response => response.json())
    .then(data => {
    //     if (data.success) {
    //         alert('Payment successful! Redirecting to order completion page...');
    //         window.location.href = `/order-complete/${paymentResponse.razorpay_order_id}`; // Redirect to order completion page
    //     } else {
    //         alert('Payment verification failed. Please try again.');
    //     }
    // })
    // .catch(error => {
    //     console.error('Error verifying payment:', error);
    //     alert('There was an error processing your payment.');
    // });
    if (data.success) {
    // Payment successful
    Swal.fire({
        icon: 'success',
        title: 'Payment Successful!',
        text: 'Redirecting to order completion page...',
        showConfirmButton: false,
        timer: 3000, // Automatically close after 3 seconds
    }).then(() => {
        window.location.href = `/order-complete/${paymentResponse.razorpay_order_id}`; // Redirect to order completion page
    });
} else {
    // Payment verification failed
    Swal.fire({
        icon: 'error',
        title: 'Payment Failed',
        text: 'Payment verification failed. Please try again.',
        confirmButtonText: 'OK'
    });
}
})
.catch(error => {
    console.error('Error verifying payment:', error);
    Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'There was an error processing your payment.',
        confirmButtonText: 'OK'
    });
});

}

</script>



<style>

  /* Add some basic styling to the table */
  table {
    border-collapse: collapse;
    width: 100%;
  }

  th, td {
    border: 1px solid #ddd;
    padding: 10px;
    text-align: left;
  }

  th {
    background-color: #f0f0f0;
  }

  .actions {
    text-align: right;
  }

 
  .edit-btn{
    background-color:#848884;
    color: #fff;
    margin-right: 3rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    
  }


</style>

